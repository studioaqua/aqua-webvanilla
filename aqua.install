<?php

/**
 * @file aqua_commerce.install
 * Installation code for Sorelle Ronco commerce profile.
 */

/**
 * Implements hook_install_tasks().
 *
 * @return array An array of tasks settings
 */
function aqua_install_tasks() {
  // Increase maximum function nesting level to prevent install errors.
  $max_nesting_level = ini_get('xdebug.max_nesting_level');
  if ($max_nesting_level > 0 && $max_nesting_level <= '200') {
    ini_set('xdebug.max_nesting_level', 200);
  }

  // Remove any status messages that might have been set. They are unneeded.
  drupal_get_messages('status', TRUE);

  $tasks = array();
  $current_task = variable_get('install_task', 'done');

  /*
  $tasks['aqua_install_additional_modules'] = array(
    'display_name' => st('Install additional functionality'),
    'type' => 'batch',
    'display' => TRUE,
  );
  */

  return $tasks;
}


/**
 * Implements hook_install_tasks_alter().
 *
 * @param  [type] $tasks         [description]
 * @param  [type] $install_state [description]
 * @return [type]                [description]
 */
function aqua_install_tasks_alter(&$tasks, $install_state)
{
  // Hide unused tasks
  $tasks['install_select_profile']['display'] = FALSE;
  $tasks['install_select_locale']['display'] = FALSE;
  // Skip languange selection page
  $tasks['install_select_locale']['run'] = INSTALL_TASK_SKIP;
  // Set what to do when installation finished
  //$tasks['install_finished']['function'] = 'aqua_install_finished';

  // The "Welcome" screen needs to come after the first two steps
  // (profile and language selection), despite the fact that they are disabled.
  $new_task['install_welcome'] = array(
    'display' => TRUE,
    'display_name' => st('Welcome'),
    'type' => 'form',
    'run' => isset($install_state['parameters']['welcome']) ? INSTALL_TASK_SKIP : INSTALL_TASK_RUN_IF_REACHED,
  );
  $old_tasks = $tasks;
  $tasks = array_slice($old_tasks, 0, 2) + $new_task + array_slice($old_tasks, 2);

  // Set the installation theme.
  _aqua_set_theme('aqua_admin');
}

/**
 * Force-set a theme at any point during the execution of the request.
 *
 * Drupal doesn't give us the option to set the theme during the installation
 * process and forces enable the maintenance theme too early in the request
 * for us to modify it in a clean way.
 *
 * @param  [type] $target_theme [description]
 * @return [type]               [description]
 */
function _aqua_set_theme($target_theme)
{
  if ($GLOBALS['theme'] != $target_theme) {
    unset($GLOBALS['theme']);

    drupal_static_reset();
    $GLOBALS['conf']['maintenance_theme'] = $target_theme;
    _drupal_maintenance_theme();
  }
}

/**
 * Task callback: shows the welcome screen.
 *
 * @param  [type] $form          [description]
 * @param  [type] $form_state    [description]
 * @param  [type] $install_state [description]
 * @return [type]                [description]
 */
function install_welcome($form, &$form_state, &$install_state)
{
  drupal_set_title(st('Welcome to Aqua distribution'));
  $message = '<p>' . st('This is a Studio Aqua distribution for developping Drupal website.') . '</p>';

  $form = array();
  $form['welcome_message'] = array(
    '#markup' => $message,
  );

  $form['actions'] = array(
    '#type' => 'actions',
  );
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => st("Let's Get Started!"),
    '#weight' => 10,
  );
  return $form;
}

/**
 * [install_welcome_submit description]
 * @param  [type] $form       [description]
 * @param  [type] $form_state [description]
 * @return [type]             [description]
 */
function install_welcome_submit($form, &$form_state)
{
  global $install_state;

  $install_state['parameters']['welcome'] = 'done';
  $install_state['parameters']['locale']  = 'it';
}

/**
 * Task callback: uses Batch API to import modules based on user selection.
 * Installs all demo store modules if requested, or any modules providing
 * additional functionality to the base install.
 *
 * Any modules providing custom blocks should be enabled here, and not before
 * (as an install profile dependency), because the themes are setup during
 * aqua_install(), which means region assignment can only happen
 * after that.
 *
 * @return array [description]
 */
function aqua_install_additional_modules()
{
  global $install_state;

  // Enable and set as default the correct theme.
  $operations[] = array('_aqua_enable_theme', array('aqua_theme'));

  $batch = array(
    'title' => t('Installing additional functionality'),
    'operations' => $operations,
    'file' => drupal_get_path('profile', 'aqua') . '/aqua.install_callbacks.inc',
  );

  return $batch;
}

/**
 * Custom installation task; perform final steps and redirect the user to the new site if there are no errors.
 *
 * @param $install_state
 *   An array of information about the current installation state.
 *
 * @return
 *   A message informing the user about errors if there was some.
 */
function aqua_install_finished(&$install_state)
{
  drupal_set_title(st('@drupal installation complete', array('@drupal' => drupal_install_profile_distribution_name())), PASS_THROUGH);
  $messages = drupal_set_message();

  // Remember the profile which was used.
  variable_set('install_profile', drupal_get_profile());
  variable_set('install_task', 'done');

  // Flush all caches to ensure that any full bootstraps during the installer
  // do not leave stale cached data, and that any content types or other items
  // registered by the install profile are registered correctly.
  drupal_flush_all_caches();

  // Install profiles are always loaded last
  db_update('system')
    ->fields(array('weight' => 1000))
    ->condition('type', 'module')
    ->condition('name', drupal_get_profile())
    ->execute();

  // Cache a fully-built schema.
  drupal_get_schema(NULL, TRUE);

  // Run cron to populate update status tables (if available) so that users
  // will be warned if they've installed an out of date Drupal version.
  // Will also trigger indexing of profile-supplied content or feeds.
  drupal_cron_run();

  if (isset($messages['error'])) {
    $output = '<p>' . (isset($messages['error']) ? st('Review the messages above before visiting <a href="@url">your new site</a>.', array('@url' => url(''))) : st('<a href="@url">Visit your new site</a>.', array('@url' => url('')))) . '</p>';
    return $output;
  }
  else {
    // Since any module can add a drupal_set_message, this can bug the user
    // when we redirect him to the front page. For a better user experience,
    // remove all the message that are only "notifications" message.
    drupal_get_messages('status', TRUE);
    drupal_get_messages('completed', TRUE);
    // Migrate adds its messages under the wrong type, see #1659150.
    drupal_get_messages('ok', TRUE);

    // If we don't install drupal using Drush, redirect the user to the front
    // page.
    if (!drupal_is_cli()) {
      if (module_exists('overlay')) {
        // Special case when no clean urls.
        $fragment = empty($GLOBALS['conf']['clean_url']) ? urlencode('?q=admin/help/getting-started') : 'admin/help/getting-started';
        drupal_goto('', array('fragment' => 'overlay=' . $fragment));
      }
      else {
        drupal_goto('admin/help/getting-started');
      }
    }
  }
}

/**
 * Implements hook_install().
 *
 * @return [type] [description]
 */
function aqua_install()
{
    // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Enable the admin theme.
  $admin_theme = 'aqua_admin';
  theme_enable(array($admin_theme));
  variable_set('admin_theme', $admin_theme);
  variable_set('node_admin_theme', '1');
  // ----------------------------------------------
  // Set admin_theme path
  // ----------------------------------------------
  if (module_exists('admin_theme'))
  {
    variable_set('admin_theme_path' , "admin/*\nuser/*\nusers/*\nnode/add/*\nnode/*/edit\nnode/*/translate\nnode/*/delete");
  }

  // Only adrimistrator can create an user account creation.
  //variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);
  // Enable default permissions for system roles.
  //$filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(
    DRUPAL_ANONYMOUS_RID,
    array(
      'access content',
    )
  );
  user_role_grant_permissions(
    DRUPAL_AUTHENTICATED_RID,
    array(
      'access content',
    )
  );

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Update the menu router information.
  menu_rebuild();

  // Set Mimemail.
  variable_set('mimemail_format', 'full_html');

  // ---------------------------------------------------
  // Add 'it' language and set as default
  // ---------------------------------------------------
  // Include locale.inc from the locale module.
  require_once DRUPAL_ROOT . '/includes/locale.inc';
  $languages = array_keys(language_list());
  if (!in_array('it', $languages))
  {
    locale_add_language(
      'it',
      'Italian',
      'Italiano',
      LANGUAGE_LTR,
      '',
      '',
      TRUE,
      TRUE
    );
  }

}


/**
 * Implements hook_requirements().
 */
/*
function aqua_requirements($phase) {
  $requirements = array();

  return $requirements;
}
*/


